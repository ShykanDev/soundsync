{"version":3,"file":"js/about.cd605ac7.js","mappings":"2MAGA,MAAMA,EAAa,CAAEC,MAAO,IACtBC,EAAa,CAAED,MAAO,QAM5B,OAA4BE,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,YACRC,KAAAA,CAAMC,GCkDR,MAAMC,GAAWC,EAAAA,EAAAA,IAAI,IACfC,GAAgBD,EAAAA,EAAAA,IAAI,IACpBE,GAAKC,EAAAA,EAAAA,MACLC,GAAgBC,EAAAA,EAAAA,IAAWH,EAAI,QAE/BI,EAAgBC,UACnB,UACSC,EAAAA,EAAAA,IAAOJ,EAAc,CACzBL,SAASA,EAASU,MAClBC,QAAS,cAEXC,QAAQC,IAAI,yB,CACb,MAAOC,GACRF,QAAQC,IAAIC,E,GAIVC,EAAcP,UAClB,IACI,MAAMQ,GAAeC,EAAAA,EAAAA,GAAMZ,GAAea,EAAAA,EAAAA,IAAM,UAAW,KAAMhB,EAAcQ,QACzES,QAAiBC,EAAAA,EAAAA,IAAQJ,GAC5BG,EAASE,MACVT,QAAQC,IAAI,8BAEVM,EAASG,SAAQd,UACf,MAAMe,GAAMC,EAAAA,EAAAA,IAAInB,EAAeoB,EAAEC,UAC3BC,EAAAA,EAAAA,IAAUJ,EAAI,G,CAG5B,MAAOT,GACPF,QAAQC,IAAIC,E,GD3ChB,MAAO,CAACc,EAAUC,MACRC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOtC,EAAY,EAC3DuC,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,IAAoB,QAAS,CAC3CC,YAAYC,EAAAA,EAAAA,IAAU5B,EAAe,CAAC,UACtC,sBAAuBsB,EAAO,KAAOA,EAAO,GAAMO,GAAkBpC,EAAUU,MAAQ0B,GACtF1C,MAAO,yCACP2C,KAAM,OACNC,YAAa,2BACZ,KAAM,KAAM,CACb,CAACC,EAAAA,GAAavC,EAASU,UAEzBuB,EAAAA,EAAAA,IAAoB,SAAU,CAC5BO,QAASjC,EACTb,MAAO,qDACN,uBACHuC,EAAAA,EAAAA,IAAoB,UAAWtC,EAAY,EACzCqC,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,IAAoB,QAAS,CAC3C,sBAAuBJ,EAAO,KAAOA,EAAO,GAAMO,GAAkBlC,EAAeQ,MAAQ0B,GAC3FF,YAAYC,EAAAA,EAAAA,IAAUpB,EAAY,CAAC,UACnCrB,MAAO,yCACP2C,KAAM,OACNC,YAAa,qBACZ,KAAM,KAAM,CACb,CAACC,EAAAA,GAAarC,EAAcQ,UAE9BuB,EAAAA,EAAAA,IAAoB,SAAU,CAC5BO,QAASzB,EACTrB,MAAO,wDACN,yBAIT,IE9EA,MAAM+C,EAAc,EAEpB,O","sources":["webpack://sound_sync/./src/views/AboutView.vue?0962","webpack://sound_sync/./src/views/AboutView.vue","webpack://sound_sync/./src/views/AboutView.vue?d56f"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { withKeys as _withKeys, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"\" }\nconst _hoisted_2 = { class: \"my-4\" }\n\nimport { addDoc, collection, deleteDoc, doc, getDocs, getFirestore, query, updateDoc, where } from 'firebase/firestore';\r\nimport { ref } from 'vue';\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'AboutView',\n  setup(__props) {\n\r\nconst bodyPart = ref('')\r\nconst bodyPartQuery = ref('')\r\nconst db = getFirestore();\r\nconst collectionRef = collection(db, 'body');\r\n\r\nconst addCollection = async() => {\r\n   try {\r\n      await addDoc(collectionRef,{\r\n        bodyPart:bodyPart.value,\r\n        userUid: '123465789'\r\n      })\r\n      console.log('Agregado correctamente');\r\n   } catch (error) {\r\n    console.log(error);\r\n   }\r\n}\r\n\r\nconst searchWord  = async () => {\r\n  try {\r\n      const queryComment = query(collectionRef, where('userUid', '==', bodyPartQuery.value));\r\n      const snapshot = await getDocs(queryComment);\r\n      if(snapshot.empty){\r\n        console.log('No se encontró ese usuario');\r\n      } else{\r\n          snapshot.forEach(async e =>{\r\n            const eId = doc(collectionRef, e.id);\r\n            await deleteDoc(eId);\r\n          })\r\n      }\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _withDirectives(_createElementVNode(\"input\", {\n      onKeypress: _withKeys(addCollection, [\"enter\"]),\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((bodyPart).value = $event)),\n      class: \"p-2 rounded-lg border-2 border-sky-900\",\n      type: \"text\",\n      placeholder: \"Nombre de la colección\"\n    }, null, 544), [\n      [_vModelText, bodyPart.value]\n    ]),\n    _createElementVNode(\"button\", {\n      onClick: addCollection,\n      class: \"bg-sky-900 font-poppins text-white p-2 rounded-lg\"\n    }, \"Agregar Collection\"),\n    _createElementVNode(\"section\", _hoisted_2, [\n      _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((bodyPartQuery).value = $event)),\n        onKeypress: _withKeys(searchWord, [\"enter\"]),\n        class: \"p-2 rounded-lg border-2 border-sky-900\",\n        type: \"text\",\n        placeholder: \"Palabra a buscar \"\n      }, null, 544), [\n        [_vModelText, bodyPartQuery.value]\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: searchWord,\n        class: \"bg-orange-900 font-poppins text-white p-2 rounded-lg\"\n      }, \"Encontrar palabra\")\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"\">\r\n    <input @keypress.enter=\"addCollection\" v-model=\"bodyPart\" class=\"p-2 rounded-lg border-2 border-sky-900\" type=\"text\"\r\n      placeholder=\"Nombre de la colección\">\r\n    <button @click=\"addCollection\" class=\"bg-sky-900 font-poppins text-white p-2 rounded-lg\">Agregar Collection</button>\r\n    <section class=\"my-4\">\r\n      <input v-model=\"bodyPartQuery\" @keypress.enter=\"searchWord\" class=\"p-2 rounded-lg border-2 border-sky-900\"\r\n        type=\"text\" placeholder=\"Palabra a buscar \">\r\n      <button @click=\"searchWord\" class=\"bg-orange-900 font-poppins text-white p-2 rounded-lg\">Encontrar\r\n        palabra</button>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<!-- <script lang=\"ts\" setup>\r\nimport { addDoc, collection, doc, getDocs, getFirestore, query, updateDoc, where } from 'firebase/firestore';\r\nimport { ref } from 'vue';\r\n\r\nconst bodyPart = ref('');\r\nconst bodyPartQuery = ref('');\r\nconst db = getFirestore();\r\nconst cuerpoRef = collection(db, 'cuerpo');\r\n\r\n\r\nconst addCollection = async () => {\r\n  try {\r\n    await addDoc(cuerpoRef, {\r\n      bodyPart: bodyPart.value\r\n    })\r\n    bodyPart.value = '';\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n  }\r\n}\r\n\r\nconst searchWord = async () => {\r\n  const queryWord = query(cuerpoRef, where('bodyPart', '==', bodyPartQuery.value));\r\n\r\n  const snapshot = await getDocs(queryWord);\r\n\r\n  if (snapshot.empty) {\r\n    console.log(`No se encontró '${bodyPartQuery.value}' en la base de datos `)\r\n  } else {\r\n    snapshot.forEach(async e => {\r\n      console.log(`Se encontró el documento ${e.id} ${JSON.stringify(e.data())}`);\r\n\r\n      const docRefId = doc(cuerpoRef, e.id);\r\n      await updateDoc(docRefId, {\r\n        bodyPart: 'Valor nulo'\r\n      })\r\n      console.log('Se actualizó el documento');\r\n    })\r\n  }\r\n}\r\n\r\n</script> -->\r\n\r\n<script setup lang=\"ts\">\r\nimport { addDoc, collection, deleteDoc, doc, getDocs, getFirestore, query, updateDoc, where } from 'firebase/firestore';\r\nimport { ref } from 'vue';\r\n\r\nconst bodyPart = ref('')\r\nconst bodyPartQuery = ref('')\r\nconst db = getFirestore();\r\nconst collectionRef = collection(db, 'body');\r\n\r\nconst addCollection = async() => {\r\n   try {\r\n      await addDoc(collectionRef,{\r\n        bodyPart:bodyPart.value,\r\n        userUid: '123465789'\r\n      })\r\n      console.log('Agregado correctamente');\r\n   } catch (error) {\r\n    console.log(error);\r\n   }\r\n}\r\n\r\nconst searchWord  = async () => {\r\n  try {\r\n      const queryComment = query(collectionRef, where('userUid', '==', bodyPartQuery.value));\r\n      const snapshot = await getDocs(queryComment);\r\n      if(snapshot.empty){\r\n        console.log('No se encontró ese usuario');\r\n      } else{\r\n          snapshot.forEach(async e =>{\r\n            const eId = doc(collectionRef, e.id);\r\n            await deleteDoc(eId);\r\n          })\r\n      }\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n}\r\n</script>\r\n<style scoped></style>","import script from \"./AboutView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./AboutView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_defineComponent","__name","setup","__props","bodyPart","ref","bodyPartQuery","db","getFirestore","collectionRef","collection","addCollection","async","addDoc","value","userUid","console","log","error","searchWord","queryComment","query","where","snapshot","getDocs","empty","forEach","eId","doc","e","id","deleteDoc","_ctx","_cache","_openBlock","_createElementBlock","_withDirectives","_createElementVNode","onKeypress","_withKeys","$event","type","placeholder","_vModelText","onClick","__exports__"],"sourceRoot":""}